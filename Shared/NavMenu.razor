@inject ChatService ChatService

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Weavy ❤ Telerik Blazor</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="chat">
                <span class="oi oi-chat" aria-hidden="true"></span> Chat <span class="badge bg-danger ml-2">@conversations</span>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="test">
                <span class="oi oi-terminal" aria-hidden="true"></span> Test
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="profile">
                <span class="oi oi-person" aria-hidden="true"></span> Profile
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="notifications">
                <span class="oi oi-bell" aria-hidden="true"></span> Notifications <span class="badge bg-danger ml-2">@notifications</span>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="logout">
                <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private int? conversations;
    private int? notifications;

    // invoked when the component is initialized after having received its initial parameters
    protected override async Task OnInitializedAsync() {
        var badge = await ChatService.GetBadgeAsync();
        conversations = (badge?.conversations ?? 0) > 0 ? badge.conversations : null;
        notifications = (badge?.notifications ?? 0) > 0 ? badge.notifications : null;

    }

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu() {
        collapseNavMenu = !collapseNavMenu;
    }
}
